// <auto-generated />
using EasyCrud.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EasyCrud.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181005165719_ALterTable_NewProps")]
    partial class ALterTable_NewProps
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyCrud.Domain.Entities.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account");

                    b.Property<bool>("Afternoon");

                    b.Property<string>("Agency");

                    b.Property<string>("BankName");

                    b.Property<string>("CPFRecipient");

                    b.Property<string>("Cellphone");

                    b.Property<bool>("Chain");

                    b.Property<string>("City");

                    b.Property<bool>("Comercial");

                    b.Property<string>("CrudLink");

                    b.Property<bool>("Dawn");

                    b.Property<bool>("EightHours");

                    b.Property<string>("Email");

                    b.Property<bool>("FourHours");

                    b.Property<bool>("FourSixHours");

                    b.Property<bool>("HoursOnWeekends");

                    b.Property<Guid>("KnowledgeId");

                    b.Property<string>("LinkedinAddress");

                    b.Property<bool>("Morning");

                    b.Property<string>("Name");

                    b.Property<bool>("Night");

                    b.Property<string>("Portfolio");

                    b.Property<string>("Recipient");

                    b.Property<int>("Salary");

                    b.Property<bool>("Savings");

                    b.Property<bool>("SixEightHours");

                    b.Property<string>("SkypeAddress");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.HasIndex("KnowledgeId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("EasyCrud.Domain.Entities.Knowledge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Android");

                    b.Property<int>("Angular");

                    b.Property<int>("Asp");

                    b.Property<int>("Bootstrap");

                    b.Property<int?>("C");

                    b.Property<int?>("Cake");

                    b.Property<int?>("Cplusplus");

                    b.Property<int?>("Css");

                    b.Property<int?>("Django");

                    b.Property<int?>("Html");

                    b.Property<int?>("Illustrator");

                    b.Property<int>("Ionic");

                    b.Property<int>("Ios");

                    b.Property<int?>("Java");

                    b.Property<int>("Jquery");

                    b.Property<int?>("Magento");

                    b.Property<int?>("MySql");

                    b.Property<string>("Others");

                    b.Property<int?>("Photoshop");

                    b.Property<int>("Php");

                    b.Property<int?>("Python");

                    b.Property<int?>("Ruby");

                    b.Property<int?>("Salesforce");

                    b.Property<int?>("Seo");

                    b.Property<int?>("SqlServer");

                    b.Property<int>("Wordpress");

                    b.HasKey("Id");

                    b.ToTable("Knowledges");
                });

            modelBuilder.Entity("EasyCrud.Domain.Entities.Candidate", b =>
                {
                    b.HasOne("EasyCrud.Domain.Entities.Knowledge", "Knowledge")
                        .WithMany()
                        .HasForeignKey("KnowledgeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
